service: dashbird-integration

custom:
  dashbird_account_id: 458024764010
  dashbird_external_id: ${env:EXTERNAL_ID}

provider:
  name: aws
  stage: ${opt:stage, env:SLS_STAGE, 'dev'}
  profile: ${opt:aws-profile, env:AWS_PROFILE, env:AWS_DEFAULT_PROFILE, 'default'}

resources:
  Parameters:
    DashbirdAccountId:
      Type: String
      Description: Dashbird's account ID
      Default: ${self:custom.dashbird_account_id}

    DashbirdExternalId:
      Type: String
      Description: Dashbird's external ID for your organization
      Default: ${self:custom.dashbird_external_id}

  Resources:
    LambdaLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/dashbird-periodic-subscriber

    LambdaExecutionRole:
      Type: AWS::IAM::Role
      DeletionPolicy: Retain
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
        Path: /
        Policies:
        - PolicyName: root
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogStream
              Resource:
                Fn::Join:
                  - ''
                  -
                    - 'arn:aws:logs:'
                    - Ref: AWS::Region
                    - ':'
                    - Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/dashbird-periodic-subscribers:*'
            - Effect: Allow
              Action:
              - logs:PutLogEvents
              Resource:
                Fn::Join:
                  - ''
                  -
                    - 'arn:aws:logs:'
                    - Ref: AWS::Region
                    - ':'
                    - Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/dashbird-periodic-subscriber:*:*'
            - Effect: Allow
              Action:
              - logs:PutSubscriptionFilter
              Resource: '*'
            - Effect: Allow
              Action:
              - logs:DescribeSubscriptionFilters
              Resource: '*'
            - Effect: Allow
              Action:
              - logs:DeleteSubscriptionFiler
              Resource: '*'

    DashbirdIntegrationRole:
      Type: AWS::IAM::Role
      DeletionPolicy: Retain
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ''
                  -
                    - 'arn:aws:iam::'
                    - Ref: DashbirdAccountId
                    - ':root'
            Action:
            - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId:
                  Ref: DashbirdExternalId
        Path: /
        Policies:
        - PolicyName: DashbirdAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: logs:FilterLogEvents
                Resource: '*'
              - Effect: Allow
                Action: logs:describeLogStreams
                Resource: '*'
              - Effect: Allow
                Action: lambda:listFunctions
                Resource: '*'
              - Effect: Allow
                Action: lambda:listTags
                Resource: '*'
              - Effect: Allow
                Action: xray:Get*
                Resource: '*'
              - Effect: Allow
                Action: xray:BatchGet*
                Resource: '*'
              - Effect: Allow
                Action: apigateway:GET
                Resource: '*'
              - Effect: Allow
                Action: apigateway:HEAD
                Resource: '*'
              - Effect: Allow
                Action: apigateway:OPTIONS
                Resource: '*'

    SubscriberLambda:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: dashbird-periodic-subscriber
        Handler: index.handler
        Environment:
          Variables:
            EXTERNAL_ID:
              Ref: DashbirdExternalId
            DASHBIRD_ROLE_ARN:
              Fn::GetAtt: DashbirdIntegrationRole.Arn
        Role:
          Fn::GetAtt: LambdaExecutionRole.Arn
        Code:
          S3Bucket: dashbird-subscriber
          S3Key: index_12638e6710293fa5ae5db942a0d059be.zip
        Runtime: nodejs8.10
        Timeout: 300
        MemorySize: 192

    ScheduledRule:
      Type: AWS::Events::Rule
      Properties:
        Description: ScheduledRule
        ScheduleExpression: rate(5 minutes)
        State: ENABLED
        Targets:
          -
            Arn:
              Fn::GetAtt: SubscriberLambda.Arn
            Id: TargetFunctionV1

    PermissionForEventsToInvokeLambda:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Ref: SubscriberLambda
        Action: lambda:InvokeFunction
        Principal: events.amazonaws.com
        SourceArn:
          Fn::GetAtt: ScheduledRule.Arn

  Outputs:
    DashbirdIntegrationRoleArn:
      Description: Arn of integration role.
      Value:
        Fn::GetAtt: DashbirdIntegrationRole.Arn
    DashbirdIntegrationRoleExternalId:
      Description: Role external Id
      Value:
        Ref: DashbirdExternalId
